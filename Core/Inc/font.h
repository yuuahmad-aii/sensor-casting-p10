// ===== FONT DATA (font.h) =====
// Anda harus membuat file "font.h" dan "font.c" atau letakkan array font di sini.
// Contoh sederhana font 5x7:
/**
 * @brief Data font 5x7 piksel.
 * Setiap karakter direpresentasikan oleh 5 byte.
 * Setiap byte merepresentasikan satu kolom vertikal piksel karakter tersebut.
 * Bit 0 dari byte adalah piksel paling atas kolom, bit 6 adalah piksel paling bawah.
 *
 * PENTING: Array ini HARUS diisi dengan data untuk semua karakter yang ingin Anda gunakan,
 * dimulai dari karakter spasi (ASCII 32) secara berurutan.
 * Contoh di bawah ini hanya untuk 'S' dan 'u' dan TIDAK LENGKAP.
 * Anda perlu membuat file font.h atau melengkapi array ini secara manual.
 *
 * Contoh untuk karakter 'A' (misalnya):
 *   .X.    Byte 0: 0x20 (kolom 1)
 *   X.X    Byte 1: 0x50 (kolom 2)
 *   XXX    Byte 2: 0x7C (kolom 3)
 *   X.X    Byte 3: 0x50 (kolom 4)
 *   X.X    Byte 4: 0x50 (kolom 5)
 */
const uint8_t Font5x7[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, // Char 0x20 ( )
    0x00, 0x00, 0x5F, 0x00, 0x00, // Char 0x21 (!)
    0x00, 0x07, 0x00, 0x07, 0x00, // Char 0x22 (")
    0x14, 0x7F, 0x14, 0x7F, 0x14, // Char 0x23 (#)
    0x24, 0x2A, 0x7F, 0x2A, 0x12, // Char 0x24 ($)
    0x23, 0x13, 0x08, 0x64, 0x62, // Char 0x25 (%)
    0x36, 0x49, 0x55, 0x22, 0x50, // Char 0x26 (&)
    0x00, 0x05, 0x03, 0x00, 0x00, // Char 0x27 (')
    0x00, 0x1C, 0x22, 0x41, 0x00, // Char 0x28 (()
    0x00, 0x41, 0x22, 0x1C, 0x00, // Char 0x29 ())
    0x14, 0x08, 0x3E, 0x08, 0x14, // Char 0x2A (*)
    0x08, 0x08, 0x3E, 0x08, 0x08, // Char 0x2B (+)
    0x00, 0x50, 0x30, 0x00, 0x00, // Char 0x2C (,)
    0x08, 0x08, 0x08, 0x08, 0x08, // Char 0x2D (-)
    0x00, 0x60, 0x60, 0x00, 0x00, // Char 0x2E (.)
    0x20, 0x10, 0x08, 0x04, 0x02, // Char 0x2F (/)
    0x3E, 0x51, 0x49, 0x45, 0x3E, // Char 0x30 (0)
    0x00, 0x42, 0x7F, 0x40, 0x00, // Char 0x31 (1)
    0x42, 0x61, 0x51, 0x49, 0x46, // Char 0x32 (2)
    0x21, 0x41, 0x45, 0x4B, 0x31, // Char 0x33 (3)
    0x18, 0x14, 0x12, 0x7F, 0x10, // Char 0x34 (4)
    0x27, 0x45, 0x45, 0x45, 0x39, // Char 0x35 (5)
    0x3C, 0x4A, 0x49, 0x49, 0x30, // Char 0x36 (6)
    0x01, 0x71, 0x09, 0x05, 0x03, // Char 0x37 (7)
    0x36, 0x49, 0x49, 0x49, 0x36, // Char 0x38 (8)
    0x06, 0x49, 0x49, 0x29, 0x1E, // Char 0x39 (9)
    0x00, 0x36, 0x36, 0x00, 0x00, // Char 0x3A (:)
    0x00, 0x56, 0x36, 0x00, 0x00, // Char 0x3B (;)
    0x08, 0x14, 0x22, 0x41, 0x00, // Char 0x3C (<)
    0x14, 0x14, 0x14, 0x14, 0x14, // Char 0x3D (=)
    0x00, 0x41, 0x22, 0x14, 0x08, // Char 0x3E (>)
    0x02, 0x01, 0x51, 0x09, 0x06, // Char 0x3F (?)
    0x32, 0x49, 0x79, 0x41, 0x3E, // Char 0x40 (@)
    0x7E, 0x11, 0x11, 0x11, 0x7E, // Char 0x41 (A)
    0x7F, 0x49, 0x49, 0x49, 0x36, // Char 0x42 (B)
    0x3E, 0x41, 0x41, 0x41, 0x22, // Char 0x43 (C)
    0x7F, 0x41, 0x41, 0x22, 0x1C, // Char 0x44 (D)
    0x7F, 0x49, 0x49, 0x49, 0x41, // Char 0x45 (E)
    0x7F, 0x09, 0x09, 0x09, 0x01, // Char 0x46 (F)
    0x3E, 0x41, 0x49, 0x49, 0x7A, // Char 0x47 (G)
    0x7F, 0x08, 0x08, 0x08, 0x7F, // Char 0x48 (H)
    0x00, 0x41, 0x7F, 0x41, 0x00, // Char 0x49 (I)
    0x20, 0x40, 0x41, 0x3F, 0x01, // Char 0x4A (J)
    0x7F, 0x08, 0x14, 0x22, 0x41, // Char 0x4B (K)
    0x7F, 0x40, 0x40, 0x40, 0x40, // Char 0x4C (L)
    0x7F, 0x02, 0x0C, 0x02, 0x7F, // Char 0x4D (M)
    0x7F, 0x04, 0x08, 0x10, 0x7F, // Char 0x4E (N)
    0x3E, 0x41, 0x41, 0x41, 0x3E, // Char 0x4F (O)
    0x7F, 0x09, 0x09, 0x09, 0x06, // Char 0x50 (P)
    0x3E, 0x41, 0x51, 0x21, 0x5E, // Char 0x51 (Q)
    0x7F, 0x09, 0x19, 0x29, 0x46, // Char 0x52 (R)
    0x46, 0x49, 0x49, 0x49, 0x31, // Char 0x53 (S)
    0x01, 0x01, 0x7F, 0x01, 0x01, // Char 0x54 (T)
    0x3F, 0x40, 0x40, 0x40, 0x3F, // Char 0x55 (U)
    0x1F, 0x20, 0x40, 0x20, 0x1F, // Char 0x56 (V)
    0x3F, 0x40, 0x38, 0x40, 0x3F, // Char 0x57 (W)
    0x63, 0x14, 0x08, 0x14, 0x63, // Char 0x58 (X)
    0x07, 0x08, 0x70, 0x08, 0x07, // Char 0x59 (Y)
    0x61, 0x51, 0x49, 0x45, 0x43, // Char 0x5A (Z)
    0x00, 0x7F, 0x41, 0x41, 0x00, // Char 0x5B ([)
    0x02, 0x04, 0x08, 0x10, 0x20, // Char 0x5C (\)
    0x00, 0x41, 0x41, 0x7F, 0x00, // Char 0x5D (])
    0x04, 0x02, 0x01, 0x02, 0x04, // Char 0x5E (^)
    0x40, 0x40, 0x40, 0x40, 0x40, // Char 0x5F (_)
    0x00, 0x01, 0x02, 0x04, 0x00, // Char 0x60 (`)
    0x20, 0x54, 0x54, 0x54, 0x78, // Char 0x61 (a)
    0x7F, 0x48, 0x44, 0x44, 0x38, // Char 0x62 (b)
    0x38, 0x44, 0x44, 0x44, 0x20, // Char 0x63 (c)
    0x38, 0x44, 0x44, 0x48, 0x7F, // Char 0x64 (d)
    0x38, 0x54, 0x54, 0x54, 0x18, // Char 0x65 (e)
    0x08, 0x7E, 0x09, 0x01, 0x02, // Char 0x66 (f)
    0x0C, 0x52, 0x52, 0x52, 0x3E, // Char 0x67 (g)
    0x7F, 0x08, 0x04, 0x04, 0x78, // Char 0x68 (h)
    0x00, 0x44, 0x7D, 0x40, 0x00, // Char 0x69 (i)
    0x20, 0x40, 0x44, 0x3D, 0x00, // Char 0x6A (j)
    0x7F, 0x10, 0x28, 0x44, 0x00, // Char 0x6B (k)
    0x00, 0x41, 0x7F, 0x40, 0x00, // Char 0x6C (l)
    0x7C, 0x04, 0x18, 0x04, 0x78, // Char 0x6D (m)
    0x7C, 0x08, 0x04, 0x04, 0x78, // Char 0x6E (n)
    0x38, 0x44, 0x44, 0x44, 0x38, // Char 0x6F (o)
    0x7C, 0x14, 0x14, 0x14, 0x08, // Char 0x70 (p)
    0x08, 0x14, 0x14, 0x18, 0x7C, // Char 0x71 (q)
    0x7C, 0x08, 0x04, 0x04, 0x08, // Char 0x72 (r)
    0x48, 0x54, 0x54, 0x54, 0x20, // Char 0x73 (s)
    0x04, 0x3F, 0x44, 0x40, 0x20, // Char 0x74 (t)
    0x3C, 0x40, 0x40, 0x20, 0x7C, // Char 0x75 (u)
    0x1C, 0x20, 0x40, 0x20, 0x1C, // Char 0x76 (v)
    0x3C, 0x40, 0x30, 0x40, 0x3C, // Char 0x77 (w)
    0x44, 0x28, 0x10, 0x28, 0x44, // Char 0x78 (x)
    0x0C, 0x50, 0x50, 0x50, 0x3C, // Char 0x79 (y)
    0x44, 0x64, 0x54, 0x4C, 0x44, // Char 0x7A (z)
    0x00, 0x08, 0x36, 0x41, 0x00, // Char 0x7B ({)
    0x00, 0x00, 0x7F, 0x00, 0x00, // Char 0x7C (|)
    0x00, 0x41, 0x36, 0x08, 0x00, // Char 0x7D (})
    0x02, 0x01, 0x02, 0x01, 0x00, // Char 0x7E (~)
};